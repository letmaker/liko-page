import{O as f,d as l,b}from"./liko.es-Db3MpUbX.js";import"./index-CceWuvSs.js";async function m(){const o=new f;await o.init({width:800,height:800,bgColor:"#333333"}),console.log("=== 示例1: 通过plist文件创建火焰效果 ===");const n=new l({url:"assets/particle/fire.plist",parent:o.stage,position:{x:150,y:300},autoPlay:!0});n.on(b.loaded,()=>{console.log("火焰粒子配置加载完成")});const c=new l({url:"assets/particle/smoke.plist",parent:o.stage,position:{x:150,y:600},autoPlay:!0});console.log("=== 示例2: 简化的瀑布效果 ===");const g=new l({parent:o.stage,position:{x:400,y:100},autoPlay:!0,config:{gravityX:0,gravityY:150,angle:270,angleVariance:15,startColor:{r:.3,g:.6,b:1,a:1},finishColor:{r:1,g:.3,b:.8,a:0},startParticleSize:8,finishParticleSize:12,emissionRate:100,particleLifespan:3,particleLifespanVariance:.5,speed:100}});console.log("=== 示例3: 爆炸效果 动态控制 ===");const s=new l({parent:o.stage,position:{x:650,y:300},autoPlay:!0,config:{startColor:{r:1,g:.3,b:.1,a:1},finishColor:{r:1,g:.8,b:0,a:0},startParticleSize:15,finishParticleSize:5,emissionRate:300}});let p=0;setInterval(()=>{switch(p+=2,p%8){case 0:console.log("启动爆炸效果"),s.play();break;case 2:console.log("暂停爆炸效果"),s.pause();break;case 4:console.log("恢复爆炸效果"),s.resume();break;case 6:console.log("停止爆炸效果"),s.stop();break}},2e3),console.log("=== 示例5: 动态修改属性演示 ===");const e=new l({parent:o.stage,position:{x:650,y:600}});e.setGravity(0,-50),e.setAngle(90,30),e.setStartColor({r:1,g:1,b:1,a:1}),e.setEndColor({r:1,g:1,b:1,a:0}),e.setParticleSize(10,5),e.setEmissionRate(50),e.setParticleLifespan(2),e.play();let r=0;const u=[{r:1,g:0,b:0,a:1},{r:0,g:1,b:0,a:1},{r:0,g:0,b:1,a:1},{r:1,g:1,b:0,a:1},{r:1,g:0,b:1,a:1}];setInterval(()=>{const t=u[r%u.length];console.log(`改变粒子颜色为: R:${t.r} G:${t.g} B:${t.b}`),e.setStartColor(t),e.setEndColor({...t,a:0});const y=5+r%3*5;e.setParticleSize(y,y/2);const C=30+r%4*20;e.setEmissionRate(C),r++},3e3),console.log("=== 示例6: 性能监控 ==="),setInterval(()=>{console.log("=== 粒子系统状态 ==="),console.log(`火焰粒子数量: ${n.particleCount}, 播放中: ${n.isPlaying}`),console.log(`烟雾粒子数量: ${c.particleCount}, 播放中: ${c.isPlaying}`),console.log(`瀑布粒子数量: ${g.particleCount}, 播放中: ${g.isPlaying}`),console.log(`爆炸粒子数量: ${s.particleCount}, 播放中: ${s.isPlaying}, 暂停: ${s.isPaused}`),console.log(`动态粒子数量: ${e.particleCount}, 播放中: ${e.isPlaying}`);const t=n.particleCount+c.particleCount+g.particleCount+s.particleCount+e.particleCount;console.log(`总粒子数量: ${t}`)},5e3),console.log("=== 示例7: 事件监听演示 ===");const i=new l({parent:o.stage,position:{x:400,y:500}});i.setStartColor({r:1,g:.8,b:0,a:1}),i.setEndColor({r:1,g:.2,b:0,a:0}),i.setParticleSize(12,3),i.setEmissionRate(100),i.setParticleLifespan(1.5);function P(){i.play(),setTimeout(()=>{i.stop(),setTimeout(P,2e3)},2e3)}P(),console.log("=== 示例8: 鼠标交互粒子 ===");const a=new l({parent:o.stage,position:{x:400,y:400}});a.setStartColor({r:.8,g:.2,b:.8,a:1}),a.setEndColor({r:.2,g:.8,b:.8,a:0}),a.setParticleSize(6,2),a.setEmissionRate(30),a.setParticleLifespan(1),a.setGravity(0,20),a.play(),o.stage.on(b.pointerMove,t=>{t.pointer&&a.position.set(t.pointer.x,t.pointer.y)})}m();
